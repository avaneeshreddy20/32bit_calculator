library ieee;
use ieee.std_logic_1164.all;
entity multiplier_tb is
end multiplier_tb;
architecture behaviour of multiplier_tb is
  component multiplier is
   port ( a,b: in std_logic_vector( 7 downto 0);
         c  : out std_logic_vector(15 downto 0));
  end component;
  signal x,y: std_logic_vector(7 downto 0);
  signal z: std_logic_vector(15 downto 0);
  begin
    u1:multiplier port map(a => x,b => y,c => z);
  process
    begin
      x <= "000"   ;
      wait for 10ns;
      x <= "001"   ;
      wait for 10ns;
      x <= "010"   ;
      wait for 10ns;
      x <= "011"   ;
      wait for 10ns;
      x <= "100"   ;
      wait for 10ns;
      x <= "101"   ;
      wait for 10ns;
      x <= "110"   ;
      wait for 10ns;
      x <= "111"   ;
      wait for 10ns;
    end process;
    
 process
   variable error_status: boolean;
   begin
     wait on x;
     wait for 10ns;
     if ((x ="000" and y = "00")or
         (x ="001" and y = "01")or
         (x ="010" and y = "01")or
         (x ="011" and y = "10")or
         (x ="100" and y = "01")or
         (x ="101" and y = "10")or
         (x ="110" and y = "10")or
         (x ="111" and y = "11"))
     then error_status:= false;
   else error_status:= true;
   end if;
   assert not error_status
      report "test failed."
      severity note;
    end process;
end behaviour;
